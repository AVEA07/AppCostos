docker run --name dbsigecomysql \
-e MYSQL_ROOT_PASSWORD=citcosto2025 \
-e MYSQL_DATABASE=SIGECO \
-e MYSQL_USER=practicante \
-e MYSQL_PASSWORD=Angel2007 \
-p 3306:3306 \
-d mysql:8.0
# Comando para crear un contenedor MySQL con Docker
# Este comando crea un contenedor llamado dbsigecomysql con las credenciales y configur
docker run --name dbsigecomysql
-e MYSQL_ROOT_PASSWORD=citcosto2025
-e MYSQL_DATABASE=SIGECO
-e MYSQL_USER=practicante
-e MYSQL_PASSWORD=Angel2007
-p 3306:3306
-d mysql:8.0

# Creacion de contenedor mysql
docker run --name dbsigecomysql -e MYSQL_ROOT_PASSWORD=citcostos2025 -e MYSQL_DATABASE=SIGECO -e MYSQL_USER=practicante -e MYSQL_PASSWORD=Angel2007 -p 3306:3306 -d mysql:8.0

# Entrar al contenedor MySQL
docker exec -it dbsigecomysql mysql -upracticante -pAngel2007 SIGECO

databases: SIGECO;
user: practicante;
password: Angel2007;

CREATE TABLE rangos (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nombre_rango VARCHAR(50) NOT NULL,
    nivel INT NOT NULL
);

CREATE TABLE usuarios (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nombre VARCHAR(100) NOT NULL,
    apellido VARCHAR(255),
    usuario VARCHAR(50) UNIQUE NOT NULL,
    contrasena VARCHAR(255) NOT NULL,
    rango_id INT,
    correo VARCHAR(100),
    fecha_registro TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (rango_id) REFERENCES rangos(id)
);

CREATE TABLE proyectos (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nombre VARCHAR(100) NOT NULL,
    descripcion TEXT,
    fecha_creacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    usuarios_id INT NOT NULL,
    FOREIGN KEY (usuarios_id) REFERENCES usuarios(id) ON DELETE CASCADE ON UPDATE CASCADE
);


CREATE TABLE costos (
    id INT AUTO_INCREMENT PRIMARY KEY,
    proyecto_id INT NOT NULL,
    usuarios_id INT NOT NULL,
    nombre_modulo VARCHAR(100) NOT NULL,
    complejidad ENUM('baja', 'media', 'alta') NOT NULL,
    cantidad_programadores INT NOT NULL,
    horas_estimadas DECIMAL(10,2) NOT NULL,
    costo_por_hora DECIMAL(10,2) NOT NULL,
    costo_total DECIMAL(10,2) GENERATED ALWAYS AS (cantidad_programadores * horas_estimadas * costo_por_hora) STORED,
    FOREIGN KEY (proyecto_id) REFERENCES proyectos(id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (usuarios_id) REFERENCES usuarios(id) ON DELETE CASCADE ON UPDATE CASCADE
);



CREATE TABLE historial (
    id INT AUTO_INCREMENT PRIMARY KEY,
    usuario_id INT,
    accion VARCHAR(255),
    fecha TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (usuario_id) REFERENCES usuarios(id)
);

INSERT INTO rangos (nombre_rango, nivel) VALUES
('Soldado de Segunda',1),
('Soldado de Primera',2),
('Cabo',3),
('Sargento Segundo',4),
('Sargento Primero',5),
('Sargento Técnico',6),
('Sargento Mayor',7),
('Subteniente',8),
('Teniente',9),
('Capitán Segundo',10),
('Capitán Primero',11),
('Mayor',12),
('Teniente Coronel',13),
('Coronel',14),
('General Brigadier',15),
('General de División',16);

INSERT INTO usuarios(nombre,usuario, contrasena, rango_id, correo)
VALUES ('Angel Emanuel Villafuerte Azanon','Practicante','practicante2025',2,'angelvillaz456@gmail.com');

INSERT INTO proyectos(nombre, descripcion, usuario_id)
VALUES ('SIGECO','Aplicacion creda con el proposito de facilitar los costos de un proyecto',1);

INSERT INTO costos(proyecto_id,nombre_modulo,complejidad,horas_estimadas,costo_por_hora)
VALUES (1,'SIGECO','media',80,130);

INSERT INTO historial (usuario_id, accion)
VALUES (1,'ingreso de presupuesto de aplicacion');

ALTER TABLE usuarios ADD COLUMN apellido VARCHAR(255) AFTER nombre;

ALTER TABLE costos ADD COLUMN usuarios_id INT AFTER proyecto_id;
ALTER TABLE costos ADD FOREIGN KEY (usuarios_id) REFERENCES usuarios(id);

